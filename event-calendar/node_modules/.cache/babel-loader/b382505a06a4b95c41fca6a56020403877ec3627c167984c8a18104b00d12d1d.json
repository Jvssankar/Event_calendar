{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\event-calendar\\\\event-calendar\\\\src\\\\components\\\\CustomToolbar.js\";\n// src/CustomToolbar.js\nimport React from \"react\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = moment.months(); // January, February, ..., December\nconst years = Array.from({\n  length: 20\n}, (_, i) => 2015 + i); // Example range\n\nconst CustomToolbar = ({\n  date,\n  onNavigate\n}) => {\n  const currentMonth = date.getMonth();\n  const currentYear = date.getFullYear();\n  const handleMonthChange = e => {\n    const newDate = new Date(date);\n    newDate.setMonth(Number(e.target.value));\n    onNavigate(\"date\", newDate);\n  };\n  const handleYearChange = e => {\n    const newDate = new Date(date);\n    newDate.setFullYear(Number(e.target.value));\n    onNavigate(\"date\", newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-toolbar\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      gap: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onNavigate(\"PREV\"),\n      className: \"nav-icon\",\n      children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currentMonth,\n      onChange: handleMonthChange,\n      children: months.map((month, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: idx,\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currentYear,\n      onChange: handleYearChange,\n      children: years.map(yr => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: yr,\n        children: yr\n      }, yr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onNavigate(\"NEXT\"),\n      className: \"nav-icon\",\n      children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomToolbar;\nexport default CustomToolbar;\nvar _c;\n$RefreshReg$(_c, \"CustomToolbar\");","map":{"version":3,"names":["React","FaChevronLeft","FaChevronRight","moment","jsxDEV","_jsxDEV","months","years","Array","from","length","_","i","CustomToolbar","date","onNavigate","currentMonth","getMonth","currentYear","getFullYear","handleMonthChange","e","newDate","Date","setMonth","Number","target","value","handleYearChange","setFullYear","className","style","display","alignItems","justifyContent","gap","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","month","idx","yr","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/event-calendar/event-calendar/src/components/CustomToolbar.js"],"sourcesContent":["// src/CustomToolbar.js\r\nimport React from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\n\r\nconst months = moment.months(); // January, February, ..., December\r\nconst years = Array.from({ length: 20 }, (_, i) => 2015 + i); // Example range\r\n\r\nconst CustomToolbar = ({ date, onNavigate }) => {\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n\r\n  const handleMonthChange = (e) => {\r\n    const newDate = new Date(date);\r\n    newDate.setMonth(Number(e.target.value));\r\n    onNavigate(\"date\", newDate);\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    const newDate = new Date(date);\r\n    newDate.setFullYear(Number(e.target.value));\r\n    onNavigate(\"date\", newDate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"calendar-toolbar\"\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        gap: \"10px\",\r\n      }}\r\n    >\r\n      <button onClick={() => onNavigate(\"PREV\")} className=\"nav-icon\">\r\n        <FaChevronLeft />\r\n      </button>\r\n\r\n      {/* Month Dropdown */}\r\n      <select value={currentMonth} onChange={handleMonthChange}>\r\n        {months.map((month, idx) => (\r\n          <option value={idx} key={month}>\r\n            {month}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Year Dropdown */}\r\n      <select value={currentYear} onChange={handleYearChange}>\r\n        {years.map((yr) => (\r\n          <option key={yr} value={yr}>\r\n            {yr}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={() => onNavigate(\"NEXT\")} className=\"nav-icon\">\r\n        <FaChevronRight />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomToolbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}