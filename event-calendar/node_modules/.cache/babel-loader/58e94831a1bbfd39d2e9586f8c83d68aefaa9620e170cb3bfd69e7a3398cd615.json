{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\event-calendar\\\\event-calendar\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport EventForm from \"./EventForm\";\nimport CustomToolbar from \"./CustomToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(BigCalendar);\n_c = DnDCalendar;\nfunction Calendar({\n  events,\n  setEvents\n}) {\n  _s();\n  const [openForms, setOpenForms] = useState([]); // support multiple open forms\n\n  // Handle event dragging\n  const moveEvent = ({\n    event,\n    start,\n    end\n  }) => {\n    const updated = events.map(evt => evt.id === event.id ? {\n      ...evt,\n      start,\n      end\n    } : evt);\n    setEvents(updated);\n  };\n\n  // Handle empty slot click (to add new event)\n  const handleSelectSlot = ({\n    start\n  }) => {\n    const newForm = {\n      id: Date.now(),\n      title: \"\",\n      start: new Date(start),\n      end: new Date(start)\n    };\n    setOpenForms(prev => [...prev, newForm]);\n  };\n\n  // Handle existing event click (edit it)\n  const handleSelectEvent = event => {\n    const editForm = {\n      ...event,\n      id: Date.now()\n    }; // give unique form ID\n    setOpenForms(prev => [...prev, editForm]);\n  };\n\n  // Close form handler\n  const closeForm = formId => {\n    setOpenForms(prev => prev.filter(form => form.id !== formId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DnDCalendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 600\n      },\n      onEventDrop: moveEvent,\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      onSelectEvent: handleSelectEvent,\n      components: {\n        toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), openForms.map(form => /*#__PURE__*/_jsxDEV(EventForm, {\n      event: form,\n      setEvents: setEvents,\n      events: events,\n      closeForm: () => closeForm(form.id)\n    }, form.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"4CpVLoQ+oRGIRqpaUhaxhQcPJ6w=\");\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"DnDCalendar\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","Calendar","BigCalendar","momentLocalizer","moment","withDragAndDrop","EventForm","CustomToolbar","jsxDEV","_jsxDEV","localizer","DnDCalendar","_c","events","setEvents","_s","openForms","setOpenForms","moveEvent","event","start","end","updated","map","evt","id","handleSelectSlot","newForm","Date","now","title","prev","handleSelectEvent","editForm","closeForm","formId","filter","form","children","startAccessor","endAccessor","style","height","onEventDrop","selectable","onSelectSlot","onSelectEvent","components","toolbar","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/event-calendar/event-calendar/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport EventForm from \"./EventForm\";\nimport CustomToolbar from \"./CustomToolbar\";\n\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(BigCalendar);\n\nfunction Calendar({ events, setEvents }) {\n  const [openForms, setOpenForms] = useState([]); // support multiple open forms\n\n  // Handle event dragging\n  const moveEvent = ({ event, start, end }) => {\n    const updated = events.map((evt) =>\n      evt.id === event.id ? { ...evt, start, end } : evt\n    );\n    setEvents(updated);\n  };\n\n  // Handle empty slot click (to add new event)\n  const handleSelectSlot = ({ start }) => {\n    const newForm = {\n      id: Date.now(),\n      title: \"\",\n      start: new Date(start),\n      end: new Date(start),\n    };\n    setOpenForms((prev) => [...prev, newForm]);\n  };\n\n  // Handle existing event click (edit it)\n  const handleSelectEvent = (event) => {\n    const editForm = { ...event, id: Date.now() }; // give unique form ID\n    setOpenForms((prev) => [...prev, editForm]);\n  };\n\n  // Close form handler\n  const closeForm = (formId) => {\n    setOpenForms((prev) => prev.filter((form) => form.id !== formId));\n  };\n\n  return (\n    <div>\n      <DnDCalendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 600 }}\n        onEventDrop={moveEvent}\n        selectable\n        onSelectSlot={handleSelectSlot}\n        onSelectEvent={handleSelectEvent}\n        components={{\n          toolbar: CustomToolbar,\n        }}\n      />\n\n      {/* Render multiple event forms */}\n      {openForms.map((form) => (\n        <EventForm\n          key={form.id}\n          event={form}\n          setEvents={setEvents}\n          events={events}\n          closeForm={() => closeForm(form.id)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}